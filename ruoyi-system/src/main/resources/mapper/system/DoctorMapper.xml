<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DoctorMapper">
    
    <resultMap type="Doctor" id="DoctorResult">
        <result property="doctorId"    column="doctor_id"    />
        <result property="doctorName"    column="doctor_name"    />
        <result property="nameLevel"    column="name_level"    />
        <result property="orderCount"    column="order_count"    />
        <result property="satisRate"    column="satis_rate"    />
        <result property="orderFee"    column="order_fee"    />
        <result property="introduction"    column="introduction"    />
    </resultMap>

    <resultMap type="com.ruoyi.system.domain.DoctorWithDepartment" id="DoctorWithDepartmentResult">
        <result property="doctorId"    column="doctor_id"    />
        <result property="doctorName"    column="doctor_name"    />
        <result property="hospitalName"    column="hospital_name"    />
        <result property="department"    column="department"    />
        <result property="nameLevel"    column="name_level"    />
        <result property="orderCount"    column="order_count"    />
        <result property="satisRate"    column="satis_rate"    />
        <result property="orderFee"    column="order_fee"    />
        <result property="introduction"    column="introduction"    />
    </resultMap>

   <!-- <sql id="DoctorColumns">
        doctor.doctor_id AS doctorID,
        doctor.doctor_name AS doctorName,
        doctor.name_level AS nameLevel,
        doctor.order_count AS orderCount,
        doctor.satis_rate AS satisRate,
        doctor.order_fee AS orderFee,
        doctor.introduction AS introduction,
        doctor_hospital.hospital_name AS hospitalName,
        doctor_hospital.department AS department
    </sql>-->
    <sql id="DoctorColumns">
        doctor.doctor_id ,
        doctor.doctor_name,
        doctor.name_level ,
        doctor.order_count,
        doctor.satis_rate,
        doctor.order_fee,
        doctor.introduction,
        doctor_hospital.hospital_name,
        doctor_hospital.department
    </sql>
    <sql id="DoctorJoins">
        LEFT JOIN doctor_hospital ON doctor.doctor_id=doctor_hospital.doctor_id
    </sql>
    <sql id="selectDoctorVo">
        select doctor_id, doctor_name, name_level, order_count, satis_rate, order_fee, introduction from doctor
    </sql>

    <!--<select id="selectDoctorList" parameterType="Doctor" resultMap="DoctorResult">
        <include refid="selectDoctorVo"></include>
        <where>
            <if test="doctorName != null  and doctorName != ''"> and doctor_name like concat('%', #{doctorName}, '%')</if>
            <if test="nameLevel != null  and nameLevel != ''"> and name_level = #{nameLevel}</if>
            <if test="orderCount != null "> and order_count = #{orderCount}</if>
            <if test="satisRate != null "> and satis_rate = #{satisRate}</if>
            <if test="orderFee != null "> and order_fee = #{orderFee}</if>
            <if test="introduction != null  and introduction != ''"> and introduction = #{introduction}</if>
        </where>
    </select>-->
    <select id="selectDoctorList" parameterType="DoctorWithDepartment" resultMap="DoctorWithDepartmentResult">
         SELECT
         <include refid="DoctorColumns"></include>
         FROM doctor
         <include refid="DoctorJoins"></include>
         <where>
            <if test="doctorId != null  and doctorId != ''"> and doctor.doctor_id = #{doctorId}</if>
            <if test="doctorName != null  and doctorName != ''"> and doctor.doctor_name like concat('%', #{doctorName}, '%')</if>
            <if test="hospitalName != null  and hospitalName != ''"> and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="department != null  and department != ''"> and department like concat('%', #{department}, '%')</if>
            <if test="nameLevel != null  and nameLevel != ''"> and name_level = #{nameLevel}</if>
            <if test="orderCount != null "> and order_count = #{orderCount}</if>
            <if test="satisRate != null "> and satis_rate >= #{satisRate}</if>
            <if test="orderFee != null "> and order_fee = #{orderFee}</if>
            <if test="introduction != null  and introduction != ''"> and introduction like concat('%', #{introduction},'%')</if>
         </where>
    </select>
    
    <select id="selectDoctorById" parameterType="Long" resultMap="DoctorWithDepartmentResult">
        SELECT
        <include refid="DoctorColumns"></include>
        FROM doctor
        <include refid="DoctorJoins"></include>
        where doctor.doctor_id = #{doctorId}
    </select>

    <select id="checkDoctorIdUnique" parameterType="Long" resultType="int">
		select count(1) from doctor where doctor_id=#{doctorId} limit 1
	</select>

    <select id="selectHospitalByName" parameterType="String" resultType="int">
        select count(1) from hospital where hospital_name=#{hospitalName}
    </select>

    <select id="checkDepartmentExists" parameterType="Doctor" resultType="int">
        select count(1) from doctor_hospital
        where hospital_name=#{hospitalName}
        and #{department} in
        (
        select department from doctor_hospital
        where hospital_name=#{hospitalName}
        )
    </select>

    <insert id="insertDoctor" parameterType="Doctor">
        insert into doctor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">doctor_id,</if>
            <if test="doctorName != null and doctorName != ''">doctor_name,</if>
            <if test="nameLevel != null and nameLevel != ''">name_level,</if>
            <if test="orderCount != null">order_count,</if>
            <if test="satisRate != null">satis_rate,</if>
            <if test="orderFee != null">order_fee,</if>
            <if test="introduction != null">introduction,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">#{doctorId},</if>
            <if test="doctorName != null and doctorName != ''">#{doctorName},</if>
            <if test="nameLevel != null and nameLevel != ''">#{nameLevel},</if>
            <if test="orderCount != null">#{orderCount},</if>
            <if test="satisRate != null">#{satisRate},</if>
            <if test="orderFee != null">#{orderFee},</if>
            <if test="introduction != null">#{introduction},</if>
         </trim>
    </insert>

    <insert id="insertHospital" parameterType="Doctor">
        insert into doctor_hospital
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">doctor_id,</if>
            <if test="doctorName != null and doctorName != ''">doctor_name,</if>
            <if test="hospitalName != null and hospitalName != ''">hospital_name,</if>
            <if test="department !=null and department !=''">department,</if>
            <if test="hospitalId != null">hospital_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">#{doctorId},</if>
            <if test="doctorName != null and doctorName != ''">#{doctorName},</if>
            <if test="hospitalName != null and hospitalName != ''">#{hospitalName},</if>
            <if test="department !=null and department !=''">department</if>
            (
            select hospital_id from hospital
            where hospital_name=#{hospitalName}
            )
        </trim>
    </insert>

    <update id="updateDoctor" parameterType="Doctor">
        update doctor
        <trim prefix="SET" suffixOverrides=",">
            <if test="doctorName != null and doctorName != ''">doctor_name = #{doctorName},</if>
            <if test="nameLevel != null and nameLevel != ''">name_level = #{nameLevel},</if>
            <if test="orderCount != null">order_count = #{orderCount},</if>
            <if test="satisRate != null">satis_rate = #{satisRate},</if>
            <if test="orderFee != null">order_fee = #{orderFee},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
        </trim>
        where doctor_id = #{doctorId};
        update doctor_hospital
        <trim prefix="SET" suffixOverrides=",">
            <if test="hospitalName != null and hospitalName != ''">hospital_name = #{hospitalName},</if>
            <if test="department != null and department != ''">department = #{department},</if>
        </trim>
        where doctor_id = #{doctorId};
    </update>

    <delete id="deleteDoctorById" parameterType="Long">
        delete from doctor where doctor_id = #{doctorId};
        delete from doctor_hospital wherre doctorId=#{doctorId};
    </delete>

    <delete id="deleteDoctorByIds" parameterType="String">
        delete from doctor where doctor_id in 
        <foreach item="doctorId" collection="array" open="(" separator="," close=")">
            #{doctorId}
        </foreach>
        ;
        delete from doctor_hospital where doctor_id in
        <foreach item="doctorId" collection="array" open="(" separator="," close=")">
            #{doctorId}
        </foreach>
    </delete>

</mapper>