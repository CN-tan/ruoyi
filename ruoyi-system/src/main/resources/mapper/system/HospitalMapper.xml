<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HospitalMapper">
    
    <resultMap type="Hospital" id="HospitalResult">
        <result property="hospitalId"    column="hospital_id"    />
        <result property="hospitalName"    column="hospital_name"    />
        <result property="address"    column="address"    />
        <result property="level"    column="level"    />
        <result property="phonenumber"    column="phonenumber"    />
    </resultMap>

    <sql id="selectHospitalVo">
        select hospital_id, hospital_name, address, level, phonenumber from hospital
    </sql>

    <select id="selectHospitalList" parameterType="Hospital" resultMap="HospitalResult">
        <include refid="selectHospitalVo"/>
        <where>
            <if test="hospitalId !=null  and hospitalId != ''">and hospital_id = #{hospitalId}</if>
            <if test="hospitalName != null  and hospitalName != ''"> and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address},'%')</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="phonenumber != null and phonenumber!= ''"> and phonenumber = #{phonenumber}</if>
        </where>
    </select>
    
    <select id="selectHospitalById" parameterType="Long" resultMap="HospitalResult">
        <include refid="selectHospitalVo"/>
        where hospital_id = #{hospitalId}
    </select>

    <select id="checkHospitalIdUnique" parameterType="Long" resultType="int">
        select count(1) from hospital
        where
        hospital_id =#{hospitalId}
    </select>

    <select id="checkPhonenumberUnique" parameterType="String" resultMap="HospitalResult">
		select hospital_id, phonenumber from hospital where phonenumber=#{phonenumber} limit 1
	</select>
    
    <select id="checkHospitalNameUnique" parameterType="String" resultType="int">
        select count(1) from hospital
        where
        hospital_name =#{hospitalName}
    </select>
        
    <insert id="insertHospital" parameterType="Hospital">
        insert into hospital
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="hospitalId != null">hospital_id,</if>
            <if test="hospitalName != null and hospitalName != ''">hospital_name,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="level != null">level,</if>
            <if test="phonenumber != null">phonenumber,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="hospitalId != null">#{hospitalId},</if>
            <if test="hospitalName != null and hospitalName != ''">#{hospitalName},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="level != null">#{level},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
         </trim>
    </insert>

    <update id="updateHospital" parameterType="Hospital">
        update hospital
        <trim prefix="SET" suffixOverrides=",">
            <if test="hospitalName != null and hospitalName != ''">hospital_name = #{hospitalName},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="level != null">level = #{level},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
        </trim>
        where hospital_id = #{hospitalId}
    </update>

    <delete id="deleteHospitalById" parameterType="Long">
        delete from hospital where hospital_id = #{hospitalId}
    </delete>

    <delete id="deleteHospitalByIds" parameterType="String">
        delete from hospital where hospital_id in 
        <foreach item="hospitalId" collection="array" open="(" separator="," close=")">
            #{hospitalId}
        </foreach>
    </delete>

</mapper>